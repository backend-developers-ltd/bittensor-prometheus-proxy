version: '3.7'

services:
  redis:
    image: redis:6-alpine
    command: redis-server --appendonly yes
    healthcheck:
      test: redis-cli ping
    volumes:
      - ./redis/data:/data
    ports:
      - ${REDIS_PORT}:6379

  db:
    image: postgres:14.0-alpine
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} || exit 1
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./db/data:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:5432

  central-prometheus:
    image: prom/prometheus:v2.46.0
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --log.level=debug
      - --web.enable-remote-write-receiver
    volumes:
      - ./central-prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped
    ports:
      - 19090:9090

  on-site-prometheus:
    image: prom/prometheus:v2.46.0
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --log.level=debug
    volumes:
      - ./on-site-prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped
    depends_on:
      - node-exporter
      - central-prometheus
    ports:
      - 29090:9090
    extra_hosts:
      - "host.docker.internal:host-gateway"

  node-exporter:
    image: prom/node-exporter:latest
    network_mode: host
    pid: host
    volumes:
      - /:/host:ro,rslave
    command:
      - '--path.rootfs=/host'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc|run|boot|var/.+)($$|/)'

